group "org.polypheny"

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.13'
    }
}

version = versionMajor + "." + versionMinor + versionQualifier


apply plugin: "java-library"
apply plugin: "idea"
apply plugin: "io.freefair.lombok"
//apply plugin: "com.google.protobuf"


compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
javadoc.options.encoding = "UTF-8"


sourceCompatibility = 1.8
targetCompatibility = 1.8


dependencies {
    implementation project(":core")
//    implementation project(":cottontail-proto")

    implementation group: 'org.vitrivr', name: 'cottontaildb', version: '0.9.1'

    /////// gRPC & Protobuf
//    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.2'
//    api group: 'com.google.protobuf', name: 'protobuf-java', version: '3.12.2'
//    api group: 'io.grpc', name: 'grpc-all', version: '1.29.0'

    // --- Test Compile ---
    testImplementation project(path: ":core", configuration: "testClasses")

    testImplementation group: "junit", name: "junit", version: junit_version

}


sourceSets {
    main {
//        proto {
//            srcDirs += "$projectDir/cottontaildb-proto/src/main/protobuf"
//        }
        java {
            srcDirs = ["src/main/java"]
//            srcDirs = ["src/main/java", "$projectDir/build/generated/source/proto/main/java"]
            outputDir = file(project.buildDir.absolutePath + "/classes")
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
        output.resourcesDir = file(project.buildDir.absolutePath + "/classes")
    }
    test {
        java {
            srcDirs = ["src/test/java"]
            outputDir = file(project.buildDir.absolutePath + "/test-classes")
        }
        resources {
            srcDirs = ["src/test/resources"]
        }
        output.resourcesDir = file(project.buildDir.absolutePath + "/test-classes")
    }
}

/*protobuf {
    generatedFilesBaseDir = "$projectDir/build/generated/source/proto"
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.29.0'
        }
    }
    protoc {
        artifact = 'com.google.protobuf:protoc:3.12.3'
    }
    generateProtoTasks {
        all()*.plugins { grpc {
            outputSubDir = 'java'
        }}
    }
}*/


/**
 * JavaDoc
 */
javadoc {
    // suppress most of the warnings
    options.addStringOption("Xdoclint:none", "-quiet")
    // Include private fields in JavaDoc
    options.memberLevel = JavadocMemberLevel.PRIVATE
    // Use HTML 5 for JavaDoc
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption("html5", true)
    }
}


/**
 * JARs
 */
jar {
    manifest {
        attributes "Manifest-Version": "1.0"
        attributes "Copyright": "The Polypheny Project (polypheny.org)"
        attributes "Version": "$version"
    }

}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier "sources"
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}
artifacts {
    //archives jar // regular jar containing only the compiled source
    archives sourcesJar // jar file containing the java doc files
    archives javadocJar // jar file containing the source files
}


/**
 * IntelliJ
 */
idea {
    module {
        downloadJavadoc = true
        downloadSources = true

        inheritOutputDirs = false
        outputDir = file("${project.buildDir}/classes")
        testOutputDir = file("${project.buildDir}/test-classes")
    }
}